extends layout.pug
block body
  .row.pb-4
    .col-md-6
      h2.sub-header Allocation Summary
      #table-allocation-summary
        table.table
          thead.thead-dark
            tr
              th(scope='col') Type
              th(scope='col') Size
              th(scope='col') # of operations
          tbody
            tr
              th(scope='row') Current
              td= session.views.summary.current_allocated_formatted
              td= session.views.summary.current_allocations.toLocaleString()
            tr
              th(scope='row') Peak
              td= session.views.summary.peak_allocated_formatted
              td= session.views.summary.peak_allocations.toLocaleString()
            tr
              th(scope='row') Total
              td= session.views.summary.total_allocated_formatted
              td= session.views.summary.total_allocations.toLocaleString()
    if session.views.memory_layout.current
      .col-md-6
        h2.sub-header Memory Usage
        canvas#chart-memory-usage
        #table-memory-usage
          table.table
            thead.thead-dark
              tr
                th(scop='col') Type
                th(scope='col') Size
            tbody
              tr
                th(scope='row') Static
                td= session.views.memory_layout.static
              tr
                th(scope='row') Stack
                td= session.views.memory_layout.stack
              tr
                th(scope='row') Available Stack
                td= session.views.memory_layout.available_stack
              tr
                th(scope='row') Dynamic
                td= session.views.memory_layout.dynamic
              tr
                th(scope='row') Available Dynamic
                td= session.views.memory_layout.available_dynamic
              tr
                th(scope='row') Total
                td= session.views.memory_layout.total
  .row
    h2.sub-header Memory Usage History
    canvas#chart-memory-usage-history
  script. 
    var current = !{JSON.stringify(session.views.memory_layout.current)};
    var memoryUsage = new Chart(document.getElementById('chart-memory-usage').getContext('2d'), {
      type: 'bar',
      data: {
        labels: [''],
        datasets: [
          {
            label: ['Static'],
            data: [(current.static_top - current.stack_base)],
            backgroundColor: [
              'rgb(45, 114, 139, 0.7)',
            ],
            borderColor: [
              'rgb(45, 114, 139)',
            ],
            borderWidth: 1
          },
          {
            label: ['Stack'],
            data: [(current.stack_top - current.stack_base)],
            backgroundColor: [
              'rgba(224, 67, 62, 0.7)',
            ],
            borderColor: [
              'rgb(224, 67, 62)',
            ],
            borderWidth: 1
          },
          {
            label: ['Available stack'],
            data: [(current.stack_max - current.stack_top)],
            backgroundColor: [
              'rgba(219, 158, 6, 0.7)',
            ],
            borderColor: [
              'rgb(219, 158, 6)',
            ],
            borderWidth: 1
          },
          {
            label: ['Dynamic'],
            data: [(current.dynamic_top - current.dynamic_base)],
            backgroundColor: [
              'rgba(62, 121, 106, 0.7)',
            ],
            borderColor: [
              'rgb(62, 121, 106)',
            ],
            borderWidth: 1
          },
          {
            label: ['Available dynamic'],
            data: [(current.total_memory - current.dynamic_top)],
            backgroundColor: [
              'rgba(69, 73, 115, 0.7)',
            ],
            borderColor: [
              'rgb(69, 73, 115)',
            ],
            borderWidth: 1
          }
        ]
      },
      options: {
        responsive: true,
        scales: {
          y: {
            type: 'linear',
            title: {
              display: true,
              text: 'Size in bytes'
            },
            bounds: 'data'
          }
        },
        minBarLength: 2
      }
    })

    var snapshots = !{JSON.stringify(session.views.memory_layout.snapshots)};
    var suggestedMin = 0;
    var suggestedMax = 0;
    var chartData = snapshots.reduce(function(acc, snapshot) {
      if (!Array.isArray(acc.static)) acc.static = [];
      if (!Array.isArray(acc.stack)) acc.stack = [];
      if (!Array.isArray(acc.available_stack)) acc.available_stack = [];
      if (!Array.isArray(acc.dynamic)) acc.dynamic = [];
      if (!Array.isArray(acc.available_dynamic)) acc.available_dynamic = [];

      var static = (snapshot.static_top - snapshot.static_base);
      var stack = (snapshot.stack_top - snapshot.stack_base);
      var available_stack = (snapshot.stack_max - snapshot.stack_top);
      var dynamic = (snapshot.dynamic_top - snapshot.dynamic_base);
      var available_dynamic = (snapshot.total_memory - snapshot.dynamic_top);

      suggestedMin = Math.min(suggestedMin, static, stack, available_stack, dynamic, available_dynamic);
      suggestedMax = Math.max(suggestedMax, static, stack, available_stack, dynamic, available_dynamic);

      acc.static.push({
        x: snapshot.timestamp,
        y: static
      });

      acc.stack.push({
        x: snapshot.timestamp,
        y: stack
      });

      acc.available_stack.push({
        x: snapshot.timestamp,
        y: available_stack
      });

      acc.dynamic.push({
        x: snapshot.timestamp,
        y: dynamic
      });

      acc.available_dynamic.push({
        x: snapshot.timestamp,
        y: available_dynamic
      });

      return acc;
    }, {});

    var memoryUsageHistory = new Chart(document.getElementById('chart-memory-usage-history').getContext('2d'), {
      type: 'line',
      data: {
        datasets: [
          {
            label: 'Static',
            data: chartData.static,
            borderColor: 'rgb(70, 162, 195)',
            backgroundColor: 'rgb(45, 114, 139)'
          },
          {
            label: 'Stack',
            data: chartData.stack,
            borderColor: 'rgb(232, 119, 115)',
            backgroundColor: 'rgb(224, 67, 62)'
          },
          {
            label: 'Available stack',
            data: chartData.available_stack,
            borderColor: 'rgb(250, 195, 56)',
            backgroundColor: 'rgb(219, 158, 6)'
          },
          {
            label: 'Dynamic',
            data: chartData.dynamic,
            borderColor: 'rgb(93, 172, 152)',
            backgroundColor: 'rgb(62, 121, 106)'
          },
          {
            label: 'Available dynamic',
            data: chartData.available_dynamic,
            borderColor: 'rgb(102, 107, 163)',
            backgroundColor: 'rgb(69, 73, 115)'
          }
        ],
      },
      options: {
        responsice: true,
        scales: {
          x: {
            type: 'linear',
            title: {
              display: true,
              text: 'Milliseconds'
            },
          },
          y: {
            type: 'linear',
            title: {
              display: true,
              text: 'Size in bytes'
            },
            suggestedMin: suggestedMin,
            suggestedMax: suggestedMax
          }
        }
      }
    });